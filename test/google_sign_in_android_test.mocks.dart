// Mocks generated by Mockito 5.4.5 from annotations
// in google_sign_in_android/test/google_sign_in_android_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:google_sign_in_android/src/messages.g.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserData_0 extends _i1.SmartFake implements _i2.UserData {
  _FakeUserData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GoogleSignInApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInApi extends _i1.Mock implements _i2.GoogleSignInApi {
  MockGoogleSignInApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get pigeonVar_messageChannelSuffix => (super.noSuchMethod(
        Invocation.getter(#pigeonVar_messageChannelSuffix),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#pigeonVar_messageChannelSuffix),
        ),
      ) as String);

  @override
  _i4.Future<void> init(_i2.InitParams? params) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [params],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserData> signInSilently() => (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
        ),
        returnValue: _i4.Future<_i2.UserData>.value(_FakeUserData_0(
          this,
          Invocation.method(
            #signInSilently,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserData>);

  @override
  _i4.Future<_i2.UserData> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i4.Future<_i2.UserData>.value(_FakeUserData_0(
          this,
          Invocation.method(
            #signIn,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserData>);

  @override
  _i4.Future<String> getAccessToken(
    String? email,
    bool? shouldRecoverAuth,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [
            email,
            shouldRecoverAuth,
          ],
        ),
        returnValue: _i4.Future<String>.value(_i3.dummyValue<String>(
          this,
          Invocation.method(
            #getAccessToken,
            [
              email,
              shouldRecoverAuth,
            ],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> clearAuthCache(String? token) => (super.noSuchMethod(
        Invocation.method(
          #clearAuthCache,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
